{"version":3,"file":"utils.js","names":["_constants","require","getInnermostProperty","props","propName","i","length","value","undefined","getTitleFromPropsList","innermostTitle","TAG_NAMES","TITLE","innermostTemplate","Array","isArray","join","replace","innermostDefaultTitle","mergeAttributes","element","res","item","attrs","Object","assign","aggregateBaseProps","base","href","getPrimaryProp","primaryProps","primaryAttributeKey","keyString","keys","key","includes","TAG_PROPERTIES","REL","toLowerCase","INNER_HTML","CSS_TEXT","ITEM_PROP","getTagsFromPropsList","tagName","primaryAttributes","propsArray","approvedSeenTags","map","filter","console","warn","reverse","reduce","approvedTags","instanceTags","instanceSeenTags","tag","forEach","push","attributeKey","tagUnion","getAnyTrueFromPropsArray","flattenArray","possibleArray","checkIfPropsMatch","toMatch","prioritizer","propsToMatch","default","priority","without","obj","exports","cloneProps","entries","slice","mergeProps","target","source","tgt","srcValue","tgtValue","concat","pushToPropArray","array","calcAggregatedState","links","LINK","HREF","meta","NAME","PROPERTY","script","SRC","prioritizeSeoTags","linkP","SEO_PRIORITY_TAGS","link","metaP","scriptP","bodyAttributes","defer","encodeSpecialCharacters","htmlAttributes","noscript","onChangeClientState","style","title","titleAttributes","propToAttr","prop","HTML_TAG_MAP"],"sources":["../../src/utils.ts"],"sourcesContent":["import {\n  HTML_TAG_MAP,\n  TAG_NAMES,\n  TAG_PROPERTIES,\n  SEO_PRIORITY_TAGS,\n} from './constants';\n\nimport type {\n  AggregatedState,\n  BaseProps,\n  HelmetPropArrays,\n  HelmetPropBooleans,\n  HelmetPropObjects,\n  HelmetProps,\n  LinkProps,\n  MetaProps,\n  PropArrayItem,\n  RegisteredHelmetPropsArray,\n  ScriptProps,\n} from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype PropList = Record<string, any>;\n\ntype AttributeList = string[];\n\ntype SeenTags<T extends keyof HelmetPropArrays> = {\n  [key in keyof PropArrayItem<T>]?: Record<string, boolean>\n};\n\ntype MatchProps = Record<string, string | AttributeList>;\n\n/**\n * Finds the last object in the given array of registered props,\n * that has the specified prop defined, and returns the value of\n * that prop in that object. Returns `undefined` if no prop object\n * has that prop defined.\n */\nfunction getInnermostProperty<T extends keyof HelmetProps>(\n  props: RegisteredHelmetPropsArray,\n  propName: T,\n): HelmetProps[T] | undefined {\n  for (let i = props.length - 1; i >= 0; --i) {\n    const value = props[i]![1][propName];\n    if (value !== undefined) return value;\n  }\n  return undefined;\n}\n\nexport function getTitleFromPropsList(\n  props: RegisteredHelmetPropsArray,\n): string | undefined {\n  let innermostTitle = getInnermostProperty(props, TAG_NAMES.TITLE);\n\n  const innermostTemplate = getInnermostProperty(\n    props,\n    'titleTemplate',\n  );\n\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join('');\n  }\n  if (innermostTemplate && innermostTitle) {\n    // use function arg to avoid need to escape $ characters\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n\n  const innermostDefaultTitle = getInnermostProperty(\n    props,\n    'defaultTitle',\n  );\n\n  // NOTE: We really want || here to match legacy behavior, where default title\n  // was applied also when the given title was an empty string.\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  return (innermostTitle || innermostDefaultTitle) ?? undefined;\n}\n\n/**\n * Merges together attributes provided for the same element by different Helmet\n * instances. Attributes provided by later registered Helmet instances overwrite\n * the same attributes provided by the earlier registered instances.\n */\nexport function mergeAttributes<T extends keyof HelmetPropObjects>(\n  element: T,\n  props: RegisteredHelmetPropsArray,\n): HelmetProps[T] {\n  const res: HelmetProps[T] = {};\n  for (const item of props) {\n    const attrs = item[1][element];\n    if (attrs) Object.assign(res, attrs);\n  }\n  return res;\n}\n\n/**\n * Finds the latest registered Helmet instance with `base` props provided,\n * and with its `href` value set, and returns those `base` props.\n * NOTE: Based on the legacy getBaseTagFromPropsList().\n */\nexport function aggregateBaseProps(\n  props: RegisteredHelmetPropsArray,\n): BaseProps | undefined {\n  for (let i = props.length - 1; i >= 0; --i) {\n    const res = props[i]![1].base;\n    if (res?.href) return res;\n  }\n  return undefined;\n}\n\n/**\n * Determines the primary key in the given `props` object, accoding to the given\n * array of valid primary keys for the kind of props object.\n * TODO: Rather than passing an array of primaryProps around, it might be more\n * simple to just have a dedicated function for each possible kind of that\n * object.\n */\nfunction getPrimaryProp<T extends keyof HelmetPropArrays>(\n  props: PropArrayItem<T>,\n  primaryProps: Array<keyof PropArrayItem<T>>,\n): keyof PropArrayItem<T> | null {\n  // Looks up for the \"primary attribute\" key.\n  let primaryAttributeKey: keyof PropArrayItem<T> | undefined;\n\n  // TODO: Perhaps also check that the value of attribute being selected\n  // as primary is actually defined? Right now, it implicitly assumes that\n  // in such case the attribute is just not present as a key in `props`.\n  for (const keyString of Object.keys(props)) {\n    const key = keyString as keyof PropArrayItem<T>;\n\n    // Special rule with link tags, since rel and href are both primary tags,\n    // rel takes priority\n    if (primaryProps.includes(key)\n      && !(\n        primaryAttributeKey === TAG_PROPERTIES.REL\n        && (props[primaryAttributeKey] as string).toLowerCase() === 'canonical'\n      )\n      && !(\n        key === TAG_PROPERTIES.REL\n        && (props[key] as string).toLowerCase() === 'stylesheet'\n      )\n    ) primaryAttributeKey = key;\n\n    // Special case for innerHTML which doesn't work lowercased\n    if (\n      primaryProps.includes(key)\n      && (key === TAG_PROPERTIES.INNER_HTML\n        || key === TAG_PROPERTIES.CSS_TEXT\n        || key === TAG_PROPERTIES.ITEM_PROP)\n    ) primaryAttributeKey = key;\n  }\n\n  return primaryAttributeKey ?? null;\n}\n\nexport function getTagsFromPropsList<T extends keyof HelmetPropArrays>(\n  tagName: T,\n  primaryAttributes: Array<keyof PropArrayItem<T>>,\n  propsArray: RegisteredHelmetPropsArray,\n): HelmetPropArrays[T] {\n  // Calculate list of tags, giving priority innermost component\n  // (end of the propslist)\n  const approvedSeenTags: SeenTags<T> = {};\n\n  // TODO: Well, this is a touch one to refactor, while ensuring it does not\n  // change any behavior aspect... let's stick to the legacy implementation,\n  // with minimal updates, for now, then refactor it later.\n  return propsArray.map(([, props]) => props)\n    .filter((props) => {\n      if (Array.isArray(props[tagName])) {\n        return true;\n      }\n      if (typeof props[tagName] !== 'undefined') {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[\n            tagName\n          ]}\"`,\n        );\n      }\n      return false;\n    })\n    .map((props) => props[tagName])\n    .reverse()\n\n    // From last to first.\n    .reduce<Array<PropArrayItem<T>>>((approvedTags, instanceTags) => {\n      const instanceSeenTags: SeenTags<T> = {};\n\n      instanceTags!.filter((tag: PropArrayItem<T>) => {\n        const primaryAttributeKey = getPrimaryProp(tag, primaryAttributes);\n\n        if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n          return false;\n        }\n\n        const value = (tag[primaryAttributeKey] as string).toLowerCase();\n\n        if (!approvedSeenTags[primaryAttributeKey]) {\n          approvedSeenTags[primaryAttributeKey] = {};\n        }\n\n        if (!instanceSeenTags[primaryAttributeKey]) {\n          instanceSeenTags[primaryAttributeKey] = {};\n        }\n\n        // essentially we collect every item that haven't been seen so far?\n\n        if (!approvedSeenTags[primaryAttributeKey][value]) {\n          instanceSeenTags[primaryAttributeKey][value] = true;\n          return true;\n        }\n\n        return false;\n      }).reverse()\n\n        // so approved tags are accumulated from last to first\n        .forEach((tag: PropArrayItem<T>) => approvedTags.push(tag));\n\n      // Update seen tags with tags from this instance\n      const keys = Object.keys(instanceSeenTags) as\n        Array<keyof PropArrayItem<T>>;\n\n      for (const attributeKey of keys) {\n        const tagUnion = {\n          ...approvedSeenTags[attributeKey],\n          ...instanceSeenTags[attributeKey],\n        };\n\n        approvedSeenTags[attributeKey] = tagUnion;\n      }\n\n      return approvedTags;\n    }, [])\n\n    // then reversed back to the from first-to-last order.\n    .reverse() as HelmetPropArrays[T];\n}\n\nfunction getAnyTrueFromPropsArray<T extends keyof HelmetPropBooleans>(\n  propsArray: RegisteredHelmetPropsArray,\n  propName: T,\n): boolean {\n  for (const [, props] of propsArray) {\n    if (props[propName]) return true;\n  }\n  return false;\n}\n\nexport function flattenArray(possibleArray: string[] | string): string {\n  return Array.isArray(possibleArray) ? possibleArray.join('') : possibleArray;\n}\n\nfunction checkIfPropsMatch<T extends keyof HelmetPropArrays>(\n  props: PropArrayItem<T>,\n  toMatch: MatchProps,\n) {\n  for (const key of Object.keys(props)) {\n    // e.g. if rel exists in the list of allowed props [amphtml, alternate, etc]\n    // TODO: Do a better typing job here.\n    if (toMatch[key]?.includes(\n      props[key as keyof PropArrayItem<T>] as unknown as string,\n    )) return true;\n  }\n  return false;\n}\n\nexport function prioritizer<T extends keyof HelmetPropArrays>(\n  propsArray: HelmetPropArrays[T],\n  propsToMatch: MatchProps,\n): {\n  default: Array<PropArrayItem<T>>;\n  priority: Array<PropArrayItem<T>>;\n} {\n  const res = {\n    default: Array<PropArrayItem<T>>(),\n    priority: Array<PropArrayItem<T>>(),\n  };\n\n  if (propsArray) {\n    for (const props of propsArray) {\n      if (checkIfPropsMatch(props, propsToMatch)) {\n        res.priority.push(props);\n      } else {\n        res.default.push(props);\n      }\n    }\n  }\n\n  return res;\n}\n\n// TODO: Perhaps, we better destruct the `obj` first, and then create the result\n// not including the key altogether?\nexport const without = (obj: PropList, key: string): PropList => ({\n  ...obj,\n  [key]: undefined,\n});\n\ntype UnknownObject = Record<number | string | symbol, unknown>;\n\n/**\n * Clones given props object deep enough to make it safe to push new items\n * to its array values, and re-assign its non-array values, without a risk\n * to mutate any externally owned objects.\n */\nexport function cloneProps(props: HelmetProps): HelmetProps {\n  const res: UnknownObject = {};\n  for (const [key, value] of Object.entries(props)) {\n    res[key] = Array.isArray(value) ? value.slice() : value;\n  }\n  return res;\n}\n\n/**\n * Merges `source` props into `target`, mutating the `target` object.\n */\nexport function mergeProps(target: HelmetProps, source: HelmetProps): void {\n  const tgt = target as UnknownObject;\n  for (const [key, srcValue] of Object.entries(source)) {\n    if (Array.isArray(srcValue)) {\n      const tgtValue = tgt[key] as unknown[] | undefined;\n      tgt[key] = tgtValue ? tgtValue.concat(srcValue) : srcValue;\n    } else tgt[key] = srcValue;\n  }\n}\n\n/**\n * Adds given item to the specified prop array inside `target`.\n * It mutates the target.\n */\nexport function pushToPropArray<K extends keyof HelmetPropArrays>(\n  target: HelmetProps,\n  array: K,\n  item: Exclude<HelmetPropArrays[K], undefined>[number],\n): void {\n  type A = Array<typeof item>;\n  const tgt = target[array] as A | undefined;\n  if (tgt) tgt.push(item);\n\n  // eslint-disable-next-line no-param-reassign\n  else (target[array] as A) = [item];\n}\n\nexport function calcAggregatedState(\n  props: RegisteredHelmetPropsArray,\n): AggregatedState {\n  let links = getTagsFromPropsList(\n    TAG_NAMES.LINK,\n    [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF],\n    props,\n  );\n  let meta = getTagsFromPropsList(\n    'meta',\n    [\n      // NOTE: In the legacy version \"charSet\", \"httpEquiv\", and \"itemProp\"\n      // were given as HTML attributes: charset, http-equiv, itemprop.\n      // I believe, it is already fine to replace them here now, but\n      // let's be vigilant.\n      TAG_PROPERTIES.NAME,\n      'charSet',\n      'httpEquiv',\n      TAG_PROPERTIES.PROPERTY,\n      'itemProp',\n    ],\n    props,\n  );\n  let script = getTagsFromPropsList(\n    'script',\n    [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML],\n    props,\n  );\n\n  const prioritizeSeoTags = getAnyTrueFromPropsArray(props, 'prioritizeSeoTags');\n\n  let priority: {\n    links: LinkProps[] | undefined;\n    meta: MetaProps[] | undefined;\n    script: ScriptProps[] | undefined;\n  } | undefined;\n\n  if (prioritizeSeoTags) {\n    const linkP = prioritizer<'link'>(links, SEO_PRIORITY_TAGS.link);\n    links = linkP.default;\n\n    const metaP = prioritizer<'meta'>(meta, SEO_PRIORITY_TAGS.meta);\n    meta = metaP.default;\n\n    const scriptP = prioritizer<'script'>(script, SEO_PRIORITY_TAGS.script);\n    script = scriptP.default;\n\n    priority = {\n      links: linkP.priority,\n      meta: metaP.priority,\n      script: scriptP.priority,\n    };\n  }\n\n  return {\n    base: aggregateBaseProps(props),\n    bodyAttributes: mergeAttributes('bodyAttributes', props),\n    defer: getInnermostProperty(props, 'defer'),\n    encodeSpecialCharacters: getInnermostProperty(props, 'encodeSpecialCharacters') ?? true,\n    htmlAttributes: mergeAttributes('htmlAttributes', props),\n    links,\n    meta,\n    noscript: getTagsFromPropsList(\n      'noscript',\n      [TAG_PROPERTIES.INNER_HTML],\n      props,\n    ),\n    onChangeClientState: getInnermostProperty(props, 'onChangeClientState'),\n    priority,\n    script,\n    style: getTagsFromPropsList(\n      'style',\n      [TAG_PROPERTIES.CSS_TEXT],\n      props,\n    ),\n    title: getTitleFromPropsList(props),\n    titleAttributes: mergeAttributes('titleAttributes', props),\n  };\n}\n\nexport function propToAttr(prop: string): string {\n  return HTML_TAG_MAP[prop] ?? prop;\n}\n"],"mappings":"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","ignoreList":[]}