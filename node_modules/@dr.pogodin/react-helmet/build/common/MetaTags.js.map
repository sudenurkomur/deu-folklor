{"version":3,"file":"MetaTags.js","names":["_react","require","_Helmet","_interopRequireDefault","_jsxRuntime","Context","createContext","description","title","MetaTags","children","extraMetaTags","image","siteName","socialDescription","socialTitle","url","socTitle","socDesc","context","useMemo","extra","length","i","content","name","push","jsx","jsxs","Fragment","default","value","_default","exports"],"sources":["../../src/MetaTags.tsx"],"sourcesContent":["import {\n  type Context as ContextT,\n  type FunctionComponent,\n  type ReactNode,\n  createContext,\n  useMemo,\n} from 'react';\n\nimport Helmet from './Helmet';\n\ntype PropsT = {\n  children?: ReactNode;\n  description: string;\n  extraMetaTags?: Array<{\n    content: string;\n    name: string;\n  }>;\n  image?: string;\n  siteName?: string;\n  socialDescription?: string;\n  socialTitle?: string;\n  title: string;\n  url?: string;\n};\n\nconst Context = createContext<PropsT>({\n  description: '',\n  title: '',\n});\n\n/**\n * Auxiliary wrapper around \"react-helmet\", which helps to inject meta tags\n * (page title, a brief content description, and social media thumbnails) into\n * generated pages.\n */\nconst MetaTags: FunctionComponent<PropsT> & {\n  Context: ContextT<PropsT>;\n} = ({\n  children,\n  description,\n  extraMetaTags,\n  image,\n  siteName,\n  socialDescription,\n  socialTitle,\n  title,\n  url,\n}) => {\n  // NOTE: I guess, in this very case, we should prefer title and description\n  // also to empty social title and decscription?\n  /* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\n  const socTitle = socialTitle || title;\n  const socDesc = socialDescription || description;\n  /* eslint-enable @typescript-eslint/prefer-nullish-coalescing */\n\n  const context = useMemo(() => ({\n    description,\n    image,\n    siteName,\n    socialDescription,\n    socialTitle,\n    title,\n    url,\n  }), [\n    description,\n    image,\n    siteName,\n    socialDescription,\n    socialTitle,\n    title,\n    url,\n  ]);\n\n  const extra: ReactNode[] = [];\n  if (extraMetaTags?.length) {\n    for (let i = 0; i < extraMetaTags.length; ++i) {\n      const { content, name } = extraMetaTags[i]!;\n      extra.push(\n        <meta\n          content={content}\n          key={`extra-meta-tag-${i}`}\n          name={name}\n        />,\n      );\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        {/* General tags. */}\n        <title>\n          {title}\n        </title>\n        <meta content={description} name=\"description\" />\n\n        {/* Twitter cards. */}\n        <meta content=\"summary_large_image\" name=\"twitter:card\" />\n        <meta content={socTitle} name=\"twitter:title\" />\n        <meta content={socDesc} name=\"twitter:description\" />\n        { image ? <meta content={image} name=\"twitter:image\" /> : null }\n        {\n          siteName\n            ? <meta content={`@${siteName}`} name=\"twitter:site\" />\n            : null\n        }\n\n        {/* Open Graph data. */}\n        <meta content={socTitle} name=\"og:title\" />\n        { image ? <meta content={image} name=\"og:image\" /> : null }\n        { image ? <meta content={socTitle} name=\"og:image:alt\" /> : null }\n        <meta content={socDesc} name=\"og:description\" />\n        {\n          siteName ? <meta content={siteName} name=\"og:sitename\" /> : null\n        }\n        { url ? <meta content={url} name=\"og:url\" /> : null }\n        {extra}\n      </Helmet>\n      {\n        children ? (\n          <Context value={context}>\n            {children}\n          </Context>\n        ) : null\n      }\n    </>\n  );\n};\n\nMetaTags.Context = Context;\n\nexport default MetaTags;\n"],"mappings":"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","ignoreList":[]}